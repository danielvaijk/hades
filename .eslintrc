/**
 * Notes about this configuration.
 *
 * 1. Don't add any formatting-related rules, as those are cleared via
 *    eslint-config-prettier, anyway.
 */
{
    "parser": "babel-eslint",
    "parserOptions": {
        "sourceType": "module",
        "ecmaFeatures": {
            "globalReturn": false,
            "impliedStrict": true,
            "jsx": false
        }
    },
    "extends": [
        "eslint:recommended",
        "plugin:import/errors",
        "plugin:import/warnings",
        // Must be the last plugin in the extension array.
        // Will disable all formatting-related ESLint rules.
        "plugin:prettier/recommended"
    ],
    "rules": {
        "semi": "error",
        "prettier/prettier": [
            "error",
            {},
            {
                "usePrettierrc": true
            }
        ],

        /**
         * Rules for possible errors.
         */
        "for-direction": "error",
        "getter-return": [
            "error",
            {
                "allowImplicit": false
            }
        ],
        "no-async-promise-executor": "error",
        "no-await-in-loop": "warn",
        "no-compare-neg-zero": "error",
        "no-cond-assign": ["error", "always"],
        "no-console": [
            "error",
            {
                "allow": ["warn"]
            }
        ],
        "no-constant-condition": [
            "error",
            {
                "checkLoops": true
            }
        ],
        "no-control-regex": "error",
        "no-debugger": "error",
        "no-dupe-args": "error",
        "no-dupe-else-if": "error",
        "no-dupe-keys": "error",
        "no-duplicate-case": "error",
        "no-empty": [
            "error",
            {
                "allowEmptyCatch": false
            }
        ],
        "no-empty-character-class": "error",
        "no-ex-assign": "error",
        "no-extra-boolean-cast": [
            "error",
            {
                "enforceForLogicalOperands": true
            }
        ],
        "no-extra-parens": ["error", "all"],
        "no-extra-semi": "error",
        "no-func-assign": "error",
        "no-import-assign": "error",
        "no-inner-declarations": ["error", "both"],
        "no-invalid-regexp": "error",
        "no-irregular-whitespace": [
            "error",
            {
                "skipStrings": false,
                "skipComments": false,
                "skipRegExps": false,
                "skipTemplates": false
            }
        ],
        "no-loss-of-precision": "error",
        "no-misleading-character-class": "error",
        "no-obj-calls": "error",
        "no-promise-executor-return": "error",
        "no-prototype-builtins": "error",
        "no-regex-spaces": "error",
        "no-setter-return": "error",
        "no-sparse-arrays": "error",
        "no-template-curly-in-string": "error",
        "no-unexpected-multiline": "error",
        "no-unreachable": "error",
        "no-unreachable-loop": "error",
        "no-unsafe-finally": "error",
        "no-unsafe-negation": [
            "error",
            {
                "enforceForOrderingRelations": true
            }
        ],
        "no-useless-backreference": "error",
        "require-atomic-updates": "error",
        "use-isnan": "error",
        "valid-typeof": [
            "error",
            {
                "requireStringLiterals": true
            }
        ]
    },
    "plugins": ["import", "prettier"],
    "env": {
        // This also automatically sets parserOptions.ecmaVersion to '11'.
        "es2020": true,
        "browser": true
    },
    "reportUnusedDisableDirectives": true
}
